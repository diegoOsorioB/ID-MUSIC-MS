name: Deploy JAR to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CHANGED_PROJECTS: "Clientes Inventarios modulo-jwt paquetes Servicios"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Build projects
        run: |
          for proj in $CHANGED_PROJECTS; do
            cd $proj
            if [ -f "pom.xml" ]; then
              mvn clean package -DskipTests
            elif [ -f "build.gradle" ]; then
              ./gradlew build -x test
            fi
            cd ..
          done

      - name: Deploy to EC2
        run: |
          for proj in $CHANGED_PROJECTS; do
            echo "=== Deploying $proj ==="

            # Crear carpetas y backup
            ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} "
              mkdir -p /home/ec2-user/$proj /home/ec2-user/$proj/backup
              if ls /home/ec2-user/$proj/*.jar 1> /dev/null 2>&1; then
                mv /home/ec2-user/$proj/*.jar /home/ec2-user/$proj/backup/
              fi
            "

            # Subir nuevo JAR
            if [ -f $GITHUB_WORKSPACE/$proj/target/*.jar ]; then
              scp -o StrictHostKeyChecking=no $GITHUB_WORKSPACE/$proj/target/*.jar ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/$proj/
            elif [ -f $GITHUB_WORKSPACE/$proj/build/libs/*.jar ]; then
              scp -o StrictHostKeyChecking=no $GITHUB_WORKSPACE/$proj/build/libs/*.jar ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/$proj/
            fi

            # Ejecutar despliegue en EC2
            ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} "
              # Detener cualquier JAR anterior
              pkill -f $proj || true

              # Lanzar nuevo JAR
              nohup java -jar /home/ec2-user/$proj/*.jar > /home/ec2-user/$proj/$proj.log 2>&1 &
              sleep 10

              # Verificar puertos 8080-8086
              PORT_OK=false
              for port in {8080..8086}; do
                if ss -tuln | grep -q \":\$port\"; then
                  PORT_OK=true
                  break
                fi
              done

              if [ \"\$PORT_OK\" = false ]; then
                echo \"ERROR: $proj no arrancÃ³, rollback...\"
                # Detener JAR fallido
                pkill -f $proj || true
                # Restaurar backup
                if ls /home/ec2-user/$proj/backup/*.jar 1> /dev/null 2>&1; then
                  mv /home/ec2-user/$proj/backup/*.jar /home/ec2-user/$proj/
                  nohup java -jar /home/ec2-user/$proj/*.jar > /home/ec2-user/$proj/$proj.log 2>&1 &
                fi
              fi
            "
          done
